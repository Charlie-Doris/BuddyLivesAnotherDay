[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "contrast"

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "saturation"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id=12]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeVectorFunc" id=13]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeVectorFunc" id=14]
output_port_for_preview = 0
function = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=16]
constant = 0.25

[sub_resource type="VisualShader" id=17]
code = "shader_type canvas_item;
uniform float saturation;
uniform float contrast;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Input:4

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 SCREEN_TEXTURE_tex_read = texture(SCREEN_TEXTURE, n_out3p0.xy);
		n_out5p0 = SCREEN_TEXTURE_tex_read.rgb;
		n_out5p1 = SCREEN_TEXTURE_tex_read.a;
	}

// VectorFunc:6
	vec3 n_out6p0;
	{
		vec3 c = n_out5p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out6p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:8
	float n_out8p0 = n_out6p0.x;
	float n_out8p1 = n_out6p0.y;
	float n_out8p2 = n_out6p0.z;

// ScalarUniform:19
	float n_out19p0 = saturation;

// ScalarOp:10
	float n_out10p0 = n_out8p1 * n_out19p0;

// VectorCompose:11
	vec3 n_out11p0 = vec3(n_out8p0, n_out10p0, n_out8p2);

// VectorFunc:7
	vec3 n_out7p0;
	{
		vec3 c = n_out11p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out7p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Scalar:16
	float n_out16p0 = 0.500000;

// VectorOp:15
	vec3 n_out15p0 = n_out7p0 - vec3(n_out16p0);

// ScalarUniform:18
	float n_out18p0 = contrast;

// ScalarOp:13
	float n_in13p1 = 0.00000;
	float n_out13p0 = max(n_out18p0, n_in13p1);

// VectorOp:14
	vec3 n_out14p0 = n_out15p0 * vec3(n_out13p0);

// VectorOp:17
	vec3 n_out17p0 = n_out14p0 + vec3(n_out16p0);

// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 604, 232 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2620, 360 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( 1000, 180 )
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( 1000, 280 )
nodes/fragment/5/node = SubResource( 12 )
nodes/fragment/5/position = Vector2( 1260, 180 )
nodes/fragment/6/node = SubResource( 13 )
nodes/fragment/6/position = Vector2( 1500, 100 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( 2400, 220 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 1720, 80 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 1760, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 2000, 80 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 2160, 200 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 1982.44, 400.833 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 2180, 300 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 2230.77, 436.667 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 2450.77, 470 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 2680, 260 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 1580, 380 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 1580, 320 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 4, 0, 5, 2, 5, 1, 0, 1, 5, 0, 6, 0, 6, 0, 8, 0, 8, 1, 10, 0, 10, 0, 11, 1, 8, 0, 11, 0, 8, 2, 11, 2, 11, 0, 7, 0, 13, 0, 14, 1, 7, 0, 15, 0, 16, 0, 15, 1, 15, 0, 14, 0, 14, 0, 17, 0, 16, 0, 17, 1, 17, 0, 0, 0, 19, 0, 10, 1, 18, 0, 13, 0 )

[resource]
shader = SubResource( 17 )
shader_param/saturation = 1.0
shader_param/contrast = 1.0
