[gd_scene load_steps=11 format=2]

[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Art/Screen_Shot_2021-11-12_at_2.18.30_PM.png" type="Texture" id=2]
[ext_resource path="res://Scenes/ScreenEffects.tscn" type="PackedScene" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Scripts/Overworld.gd" type="Script" id=5]
[ext_resource path="res://Graphics/just-a-test-backdrop.jpg" type="Texture" id=7]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform float time;
uniform float width;
uniform vec4 color: hint_color;

float ring(vec3 u, float rad, float wth) {
	float circle = distance(u, vec3(0.5, 0.5, 0.0)) / 0.5;

	float minVal = rad - (wth / 2.0);
	float maxVal = rad + (wth / 2.0);

	vec3 y = vec3(0.0, 0.0, 0.0);
	if(abs(circle - maxVal) < 0.0)
	{
		y = vec3(1.0, 1.0, 1.0);
	}
	else if(circle < maxVal)
	{
		y = vec3(1.0, 1.0, 1.0);
	}

	vec3 x = vec3(0.0, 0.0, 0.0);
	if(abs(circle - rad) < (wth /  2.0))
	{
		x =  vec3(1.0, 1.0, 1.0);
	}
	
	vec3 third = vec3(0.333333, 0.333333, 0.333333);
	float z = dot(x, third) * circle;
	float w = smoothstep(minVal, rad, z) * (1.0 - smoothstep(rad, maxVal, z));
	return dot(y, third) * w;	
}

void vertex() {
// Output:0

}

void fragment() {
	// x = speed; y = time; z = width; a = alpha
	vec4 rings[4] = vec4[4] (
		vec4(0.7, 0.0, width * 2.3, 1.0),
		vec4(0.8, 0.3, width, 0.7),
		vec4(0.9, 0.4, width * 0.7, 0.5),
		vec4(1.0, 0.5, width * 0.4, 0.3)
	);
	
	vec3 uv = vec3(UV, 0.0);
	float circle = distance(uv, vec3(0.5, 0.5, 0.0)) / 0.5;
	float alpha = 0.0;
	for (int i = 0; i < rings.length(); i++) {
		if (time >= rings[i].y) {
			alpha += ring(uv, rings[i].x * (time - rings[i].y), rings[i].z) * rings[i].a;
		}
	}
	alpha *= color.a;
	alpha *= max(1.0-circle, 0.0);
	COLOR = vec4(color.xyz, alpha);

}

void light() {
// Output:0

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/time = 2.5
shader_param/width = 0.074
shader_param/color = Color( 0.72549, 0.835294, 0.952941, 1 )

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/time")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2.5 ]
}

[sub_resource type="Animation" id=4]
resource_name = "ripple"
length = 2.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/time")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -0.1, 2.5 ]
}

[node name="Overworld" type="Node"]
script = ExtResource( 5 )

[node name="Screen_Shot_2021-11-12_at_21830_PM" type="Sprite" parent="."]
visible = false
position = Vector2( 274.798, 158.978 )
scale = Vector2( 1.89015, 1.89015 )
texture = ExtResource( 2 )

[node name="just-a-test-backdrop" type="Sprite" parent="."]
visible = false
position = Vector2( 550.01, 298.72 )
texture = ExtResource( 7 )

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 653.48, 296.88 )
collision/safe_margin = 1.0

[node name="Camera2D" type="Camera2D" parent="Player"]
current = true
limit_left = -189
limit_top = -132
limit_right = 1164
limit_bottom = 716

[node name="RoomContainer" type="Node" parent="."]

[node name="Splash" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( -82.7507, 56.0637 )
scale = Vector2( 1, 0.417969 )
texture = ExtResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Splash"]
anims/RESET = SubResource( 3 )
anims/ripple = SubResource( 4 )

[node name="ScreenEffects" parent="." instance=ExtResource( 3 )]
camera_active = true
use_enter_exit = true
noise_scale = 0.15
vignette_radius = 0.585
vignette_blur = 0.33

[node name="KinematicBody2D" type="KinematicBody2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="KinematicBody2D"]
polygon = PoolVector2Array( 375.853, 233.35, 357.102, -65.853, 315.523, -78.082, 19.5819, 111.875, -9.7677, 105.353, -307.34, 338.519, -309.786, 429.014, 522.601, 647.505, 575.593, 359.716, 569.887, 283.081 )
